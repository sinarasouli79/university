# Generated by Django 4.1 on 2022-08-25 09:15

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, verbose_name='نام')),
                ('code', models.CharField(max_length=10, unique=True, verbose_name='کد درس')),
                ('credit', models.PositiveSmallIntegerField(verbose_name='تعداد واحد')),
            ],
            options={
                'verbose_name': 'درس',
                'verbose_name_plural': 'درس\u200cها',
            },
        ),
        migrations.CreateModel(
            name='CourseSelection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': 'انتخاب واحد',
                'verbose_name_plural': 'انتخاب واحد',
            },
        ),
        migrations.CreateModel(
            name='Faculty',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, unique=True, verbose_name='نام')),
                ('manager', models.CharField(max_length=30, verbose_name='مدیر')),
                ('established_year', models.DateField(verbose_name='سال تاسیس')),
            ],
            options={
                'verbose_name': 'دانشکده',
                'verbose_name_plural': 'دانشکده\u200cها',
            },
        ),
        migrations.CreateModel(
            name='Instructor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=30, verbose_name='نام')),
                ('last_name', models.CharField(max_length=30, verbose_name='نام\u200cخانوادگی')),
                ('national_id', models.CharField(max_length=10, unique=True, verbose_name='کدملی')),
            ],
            options={
                'verbose_name': 'مدرس',
                'verbose_name_plural': 'مدرس\u200cها',
            },
        ),
        migrations.CreateModel(
            name='Major',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='نام')),
                ('code', models.CharField(max_length=10, unique=True, verbose_name='کد درس')),
                ('area_of_interest', models.CharField(blank=True, max_length=50, null=True, verbose_name='گرایش')),
                ('grade', models.CharField(choices=[('B', 'کارشناسی'), ('M', 'کارشناسی ارشد'), ('D', 'دکترا')], default='B', max_length=1, verbose_name='مقطع')),
                ('faculty', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.faculty', verbose_name='دانشکده')),
            ],
            options={
                'verbose_name': 'رشته',
                'verbose_name_plural': 'رشته\u200cها',
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=30, verbose_name='نام')),
                ('last_name', models.CharField(max_length=30, verbose_name='نام\u200cخانوادگی')),
                ('national_id', models.CharField(max_length=10, unique=True, verbose_name='کدملی')),
                ('major', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.major', verbose_name='رشته')),
            ],
            options={
                'verbose_name': 'دانشجو',
                'verbose_name_plural': 'دانشجویان',
            },
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('class_time', models.CharField(max_length=100, verbose_name='زمان')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.course', verbose_name='درس')),
                ('instructor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.instructor', verbose_name='مدرس')),
                ('student', models.ManyToManyField(through='main.CourseSelection', to='main.student', verbose_name='دانشجویان')),
            ],
            options={
                'verbose_name': 'سکشن',
                'verbose_name_plural': 'سکشن\u200cها',
            },
        ),
        migrations.CreateModel(
            name='MajorInstructor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('instructor', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.instructor', verbose_name='مدرس')),
                ('major', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.major', verbose_name='رشته')),
            ],
            options={
                'verbose_name': 'مدرس های رشته',
                'verbose_name_plural': 'مدرس های رشته\u200cها',
                'unique_together': {('major', 'instructor')},
            },
        ),
        migrations.CreateModel(
            name='MajorCourse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.course', verbose_name='درس')),
                ('major', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.major', verbose_name='رشته')),
            ],
            options={
                'verbose_name': 'درس های رشته',
                'verbose_name_plural': 'درس های رشته\u200cها',
                'unique_together': {('major', 'course')},
            },
        ),
        migrations.CreateModel(
            name='InstructorCourse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.course', verbose_name='درس')),
                ('instructor', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.instructor', verbose_name='مدرس')),
            ],
            options={
                'verbose_name': 'درس ارائه شده',
                'verbose_name_plural': 'درس های ارائه شده',
                'unique_together': {('course', 'instructor')},
            },
        ),
        migrations.AddField(
            model_name='instructor',
            name='courses',
            field=models.ManyToManyField(through='main.InstructorCourse', to='main.course', verbose_name='درس'),
        ),
        migrations.AddField(
            model_name='instructor',
            name='majors',
            field=models.ManyToManyField(through='main.MajorInstructor', to='main.major', verbose_name='رشته'),
        ),
        migrations.AddField(
            model_name='courseselection',
            name='section',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.section', verbose_name='سکشن'),
        ),
        migrations.AddField(
            model_name='courseselection',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.student', verbose_name='دانشجو'),
        ),
        migrations.AddField(
            model_name='course',
            name='major',
            field=models.ManyToManyField(through='main.MajorCourse', to='main.major', verbose_name='رشته'),
        ),
        migrations.AddField(
            model_name='course',
            name='prerequisite',
            field=models.ManyToManyField(blank=True, to='main.course', verbose_name='دروس پیشنیاز'),
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.AlterUniqueTogether(
            name='courseselection',
            unique_together={('student', 'section')},
        ),
    ]
